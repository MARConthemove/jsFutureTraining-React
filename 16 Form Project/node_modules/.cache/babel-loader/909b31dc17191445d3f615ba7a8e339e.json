{"ast":null,"code":"var _jsxFileName = \"/Users/marconthemove/code/MARConthemove/jsFutureTraining React/16 Form Project/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useBasicInput from '../hooks/use-basicInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput\n  } = useBasicInput(value => value.trim() !== '');\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput\n  } = useBasicInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEamilInput\n  } = useBasicInput(value => value.includes('@'));\n  let formIsValid = false;\n\n  if (enteredFirstNameIsValid && enteredLastNameIsValid) {\n    formIsValid = true;\n  } // Form submission handler:\n\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (enteredFirstNameIsValid && enteredLastNameIsValid) {\n      return;\n    }\n\n    console.log('Entered FirstName: ', enteredFirstName);\n    console.log('Entered LastName: ', enteredLastName);\n    console.log('Entered Email: ', enteredEmail);\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEamilInput();\n  }; // CSS classes handler:\n\n\n  const firstNameInputClasses = firstNameInputHasError ? 'form-control invalid' : 'form-control';\n  const lastNameInputClasses = firstNameInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: firstNameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), firstNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), lastNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"va+vhkGLJFJvI/99gRhoiYmwWPA=\", false, function () {\n  return [useBasicInput, useBasicInput, useBasicInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/marconthemove/code/MARConthemove/jsFutureTraining React/16 Form Project/src/components/BasicForm.js"],"names":["useBasicInput","BasicForm","props","value","enteredFirstName","isValid","enteredFirstNameIsValid","hasError","firstNameInputHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstNameInput","trim","enteredLastName","enteredLastNameIsValid","lastNameInputHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastNameInput","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurHandler","resetEamilInput","includes","formIsValid","formSubmissionHandler","event","preventDefault","console","log","firstNameInputClasses","lastNameInputClasses"],"mappings":"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","sourcesContent":["import useBasicInput from '../hooks/use-basicInput'\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput,\n  } = useBasicInput((value) => value.trim() !== '')\n\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput,\n  } = useBasicInput((value) => value.trim() !== '')\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEamilInput,\n  } = useBasicInput((value) => value.includes('@'))\n\n  let formIsValid = false\n\n  if (enteredFirstNameIsValid && enteredLastNameIsValid) {\n    formIsValid = true\n  }\n\n  // Form submission handler:\n  const formSubmissionHandler = (event) => {\n    event.preventDefault()\n\n    if (enteredFirstNameIsValid && enteredLastNameIsValid) {\n      return\n    }\n\n    console.log('Entered FirstName: ', enteredFirstName)\n    console.log('Entered LastName: ', enteredLastName)\n    console.log('Entered Email: ', enteredEmail)\n\n    resetFirstNameInput()\n    resetLastNameInput()\n    resetEamilInput()\n  }\n\n  // CSS classes handler:\n  const firstNameInputClasses = firstNameInputHasError\n    ? 'form-control invalid'\n    : 'form-control'\n\n  const lastNameInputClasses = firstNameInputHasError\n    ? 'form-control invalid'\n    : 'form-control'\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={firstNameInputClasses}>\n        <div className='form-control'>\n          <label htmlFor='name'>First Name</label>\n          <input\n            type='text'\n            id='name'\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstNameInputHasError && (\n            <p className='error-text'>First name must not be empty</p>\n          )}\n        </div>\n        <div className={lastNameInputClasses}>\n          <label htmlFor='name'>Last Name</label>\n          <input\n            type='text'\n            id='name'\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={enteredLastName}\n          />\n          {lastNameInputHasError && (\n            <p className='error-text'>Last name must not be empty</p>\n          )}\n        </div>\n      </div>\n      <div className='form-control'>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' />\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  )\n}\n\nexport default BasicForm\n"]},"metadata":{},"sourceType":"module"}