{"ast":null,"code":"var _jsxFileName = \"/Users/marconthemove/code/MARConthemove/jsFutureTraining React/11 Food Ordering/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const existingCartItemIndex = state.item.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.item[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  }; // Object with Item props\n\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  }; // JSX:\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/marconthemove/code/MARConthemove/jsFutureTraining React/11 Food Ordering/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","existingCartItemIndex","findIndex","id","existingCartItem","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AAEA,UAAMC,qBAAqB,GAAGN,KAAK,CAACK,IAAN,CAAWE,SAAX,CAAqBF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACI,IAAP,CAAYG,EAArD,CAA9B;AAEA,UAAMC,gBAAgB,GAAGT,KAAK,CAACK,IAAN,CAAWC,qBAAX,CAAzB;AAEA,UAAMI,kBAAkB,GACtBV,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYM,KAAZ,GAAoBV,MAAM,CAACI,IAAP,CAAYO,MADtD;AAGA,WAAO;AACLf,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEY;AAFR,KAAP;AAID;;AACD,SAAOd,gBAAP;AACD,CAjBD;;AAmBA,MAAMiB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCtB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAMqB,oBAAoB,GAAIZ,IAAD,IAAU;AACrCW,IAAAA,kBAAkB,CAAC;AAAEd,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMa,yBAAyB,GAAIV,EAAD,IAAQ;AACxCQ,IAAAA,kBAAkB,CAAC;AAAEd,MAAAA,IAAI,EAAE,QAAR;AAAkBM,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD,CAV8B,CAc9B;;;AACA,QAAMW,WAAW,GAAG;AAClBtB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADC;AAElBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFL;AAGlBsB,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB,CAf8B,CAsB9B;;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5BD;;GAAMT,Y;;KAAAA,Y;AA8BN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react'\n\nimport CartContext from './cart-context'\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n}\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item)\n\n    const existingCartItemIndex = state.item.findIndex(item => item.id === action.item.id)\n\n    const existingCartItem = state.item[existingCartItemIndex]\n\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    }\n  }\n  return defaultCartState\n}\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  )\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: 'ADD', item: item })\n  }\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: 'REMOVE', id: id })\n  }\n\n  // Object with Item props\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  }\n\n  // JSX:\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  )\n}\n\nexport default CartProvider\n"]},"metadata":{},"sourceType":"module"}